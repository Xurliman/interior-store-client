

variables:
  MYSQL_ROOT_PASSWORD: password
  MYSQL_USER: root
  MYSQL_PASSWORD: password
  MYSQL_DATABASE: configurator_db
  DB_HOST: db
  LICENSE_FINDER_CLI_OPTS: "--recursive"

cache:
  paths:
    - vendor/
    - node_modules/

stages:
  - build
  - test
  - release
  - deploy

# SAST (Static Application Security Testing)
#sast:
#  stage: test

#sentry_upload:
#  image: getsentry/sentry-cli:latest
#  stage: release
#  rules:
#    - if: $CI_COMMIT_TAG && $SENTRY_ORG
#  script:
#    - sentry-cli releases new --finalize "$CI_COMMIT_REF_NAME"
#    - sentry-cli releases set-commits --auto "$CI_COMMIT_REF_NAME"

build:
  stage: build
  when: manual
  tags:
    - docker
  script:
    - docker compose build

check:
  stage: test
  when: manual
  tags:
    - docker
  script:
    # run laravel tests
    - php vendor/bin/phpunit --coverage-text --colors=never
    # run frontend tests
    # if you have any task for testing frontend
    # set it in your package.json script
    # comment this out if you don't have a frontend test
    #- npm test

deploy:
  stage: deploy
  when: manual
  tags:
    - docker
  script: echo "Define your deployment script!"
  environment: production
  only:
    - master

# Check a lot of things. Uncomment later
include:
  #- template: Security/Dependency-Scanning.gitlab-ci.yml
  #- template: Security/SAST.gitlab-ci.yml
  #- template: Security/Secret-Detection.gitlab-ci.yml
  #- template: Security/Container-Scanning.gitlab-ci.yml
  #- template: Code-Quality.gitlab-ci.yml

license_management:
  stage: release
  when: manual
  tags:
    - docker
  script:
    - apt-get update -qy
    - apt-get install -y license_finder
    - license_finder
  only:
    - master

